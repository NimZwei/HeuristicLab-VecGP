//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HeuristicLab.Problems.Programmable {


  /// <summary>
  ///   A strongly-typed resource class, for looking up localized strings, etc.
  /// </summary>
  // This class was auto-generated by the StronglyTypedResourceBuilder
  // class via a tool like ResGen or Visual Studio.
  // To add or remove a member, edit your .ResX file then rerun ResGen
  // with the /str option, or rebuild your VS project.
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  public class ScriptTemplates {

    private static global::System.Resources.ResourceManager resourceMan;

    private static global::System.Globalization.CultureInfo resourceCulture;

    [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
    internal ScriptTemplates() {
    }

    /// <summary>
    ///   Returns the cached ResourceManager instance used by this class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public static global::System.Resources.ResourceManager ResourceManager {
      get {
        if (object.ReferenceEquals(resourceMan, null)) {
          global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HeuristicLab.Problems.Programmable.Templates.ScriptTemplates", typeof(ScriptTemplates).Assembly);
          resourceMan = temp;
        }
        return resourceMan;
      }
    }

    /// <summary>
    ///   Overrides the current thread's CurrentUICulture property for all
    ///   resource lookups using this strongly typed resource class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public static global::System.Globalization.CultureInfo Culture {
      get {
        return resourceCulture;
      }
      set {
        resourceCulture = value;
      }
    }

    /// <summary>
    ///   Looks up a localized string similar to using System;
    ///using System.Linq;
    ///using System.Collections.Generic;
    ///using HeuristicLab.Common;
    ///using HeuristicLab.Core;
    ///using HeuristicLab.Data;
    ///using ENCODING_NAMESPACE;
    ///using HeuristicLab.Optimization;
    ///using HeuristicLab.Problems.Programmable;
    ///
    ///namespace HeuristicLab.Problems.Programmable {
    ///  public class CompiledSingleObjectiveProblemDefinition : CompiledMultiObjectiveProblemDefinition&lt;ENCODING_CLASS, SOLUTION_CLASS&gt; {
    ///    public override bool[] Maximization { get { return new[] { false, false [rest of string was truncated]&quot;;.
    /// </summary>
    public static string MultiObjectiveCombinedEncodingProblem_Template {
      get {
        return ResourceManager.GetString("MultiObjectiveCombinedEncodingProblem_Template", resourceCulture);
      }
    }

    /// <summary>
    ///   Looks up a localized string similar to using System;
    ///using System.Linq;
    ///using System.Collections.Generic;
    ///using HeuristicLab.Common;
    ///using HeuristicLab.Core;
    ///using HeuristicLab.Data;
    ///using ENCODING_NAMESPACE;
    ///using HeuristicLab.Optimization;
    ///using HeuristicLab.Problems.Programmable;
    ///
    ///namespace HeuristicLab.Problems.Programmable {
    ///  public class CompiledSingleObjectiveProblemDefinition : CompiledMultiObjectiveProblemDefinition&lt;ENCODING_CLASS, SOLUTION_CLASS&gt; {
    ///    public override bool[] Maximization { get { return new[] { false, false [rest of string was truncated]&quot;;.
    /// </summary>
    public static string MultiObjectiveProblem_Template {
      get {
        return ResourceManager.GetString("MultiObjectiveProblem_Template", resourceCulture);
      }
    }

    /// <summary>
    ///   Looks up a localized string similar to using System;
    ///using System.Linq;
    ///using System.Collections.Generic;
    ///using HeuristicLab.Common;
    ///using HeuristicLab.Core;
    ///using HeuristicLab.Data;
    ///using ENCODING_NAMESPACE;
    ///using HeuristicLab.Optimization;
    ///using HeuristicLab.Problems.Programmable;
    ///
    ///namespace HeuristicLab.Problems.Programmable {
    ///  public class CompiledSingleObjectiveProblemDefinition : CompiledSingleObjectiveProblemDefinition&lt;ENCODING_CLASS, SOLUTION_CLASS&gt; {
    ///    public override bool Maximization { get { return false; } }
    ///
    ///    pub [rest of string was truncated]&quot;;.
    /// </summary>
    public static string SingleObjectiveCombinedEncodingProblem_Template {
      get {
        return ResourceManager.GetString("SingleObjectiveCombinedEncodingProblem_Template", resourceCulture);
      }
    }

    /// <summary>
    ///   Looks up a localized string similar to using System;
    ///using System.Linq;
    ///using System.Collections.Generic;
    ///using HeuristicLab.Common;
    ///using HeuristicLab.Core;
    ///using HeuristicLab.Data;
    ///using ENCODING_NAMESPACE;
    ///using HeuristicLab.Optimization;
    ///using HeuristicLab.Problems.Programmable;
    ///
    ///namespace HeuristicLab.Problems.Programmable {
    ///  public class CompiledSingleObjectiveProblemDefinition : CompiledSingleObjectiveProblemDefinition&lt;ENCODING_CLASS, SOLUTION_CLASS&gt; {
    ///    public override bool Maximization { get { return false; } }
    ///
    ///    pub [rest of string was truncated]&quot;;.
    /// </summary>
    public static string SingleObjectiveProblem_Template {
      get {
        return ResourceManager.GetString("SingleObjectiveProblem_Template", resourceCulture);
      }
    }
  }
}
