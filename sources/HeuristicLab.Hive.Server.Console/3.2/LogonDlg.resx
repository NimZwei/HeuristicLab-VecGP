<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>