//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HeuristicLab.Hive.Client.Communication.ServerService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServerService.IClientCommunicator")]
    public interface IClientCommunicator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientCommunicator/Login", ReplyAction="http://tempuri.org/IClientCommunicator/LoginResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HeuristicLab.Hive.Contracts.ResponseHB))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HeuristicLab.Hive.Contracts.ResponseJob))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HeuristicLab.Hive.Contracts.ResponseResultReceived))]
        HeuristicLab.Hive.Contracts.Response Login(HeuristicLab.Hive.Contracts.BusinessObjects.ClientInfo clientInfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClientCommunicator/Login", ReplyAction="http://tempuri.org/IClientCommunicator/LoginResponse")]
        System.IAsyncResult BeginLogin(HeuristicLab.Hive.Contracts.BusinessObjects.ClientInfo clientInfo, System.AsyncCallback callback, object asyncState);
        
        HeuristicLab.Hive.Contracts.Response EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientCommunicator/ProcessHeartBeat", ReplyAction="http://tempuri.org/IClientCommunicator/ProcessHeartBeatResponse")]
        HeuristicLab.Hive.Contracts.ResponseHB ProcessHeartBeat(HeuristicLab.Hive.Contracts.BusinessObjects.HeartBeatData hbData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClientCommunicator/ProcessHeartBeat", ReplyAction="http://tempuri.org/IClientCommunicator/ProcessHeartBeatResponse")]
        System.IAsyncResult BeginProcessHeartBeat(HeuristicLab.Hive.Contracts.BusinessObjects.HeartBeatData hbData, System.AsyncCallback callback, object asyncState);
        
        HeuristicLab.Hive.Contracts.ResponseHB EndProcessHeartBeat(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientCommunicator/SendJob", ReplyAction="http://tempuri.org/IClientCommunicator/SendJobResponse")]
        HeuristicLab.Hive.Contracts.ResponseJob SendJob(System.Guid clientId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClientCommunicator/SendJob", ReplyAction="http://tempuri.org/IClientCommunicator/SendJobResponse")]
        System.IAsyncResult BeginSendJob(System.Guid clientId, System.AsyncCallback callback, object asyncState);
        
        HeuristicLab.Hive.Contracts.ResponseJob EndSendJob(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientCommunicator/ProcessJobResult", ReplyAction="http://tempuri.org/IClientCommunicator/ProcessJobResultResponse")]
        HeuristicLab.Hive.Contracts.ResponseResultReceived ProcessJobResult(System.Guid clientId, long jobId, byte[] result, double percentage, System.Exception exception, bool finished);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClientCommunicator/ProcessJobResult", ReplyAction="http://tempuri.org/IClientCommunicator/ProcessJobResultResponse")]
        System.IAsyncResult BeginProcessJobResult(System.Guid clientId, long jobId, byte[] result, double percentage, System.Exception exception, bool finished, System.AsyncCallback callback, object asyncState);
        
        HeuristicLab.Hive.Contracts.ResponseResultReceived EndProcessJobResult(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientCommunicator/Logout", ReplyAction="http://tempuri.org/IClientCommunicator/LogoutResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HeuristicLab.Hive.Contracts.ResponseHB))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HeuristicLab.Hive.Contracts.ResponseJob))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HeuristicLab.Hive.Contracts.ResponseResultReceived))]
        HeuristicLab.Hive.Contracts.Response Logout(System.Guid clientId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClientCommunicator/Logout", ReplyAction="http://tempuri.org/IClientCommunicator/LogoutResponse")]
        System.IAsyncResult BeginLogout(System.Guid clientId, System.AsyncCallback callback, object asyncState);
        
        HeuristicLab.Hive.Contracts.Response EndLogout(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IClientCommunicatorChannel : HeuristicLab.Hive.Client.Communication.ServerService.IClientCommunicator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HeuristicLab.Hive.Contracts.Response Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HeuristicLab.Hive.Contracts.Response)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ProcessHeartBeatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProcessHeartBeatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HeuristicLab.Hive.Contracts.ResponseHB Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HeuristicLab.Hive.Contracts.ResponseHB)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SendJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HeuristicLab.Hive.Contracts.ResponseJob Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HeuristicLab.Hive.Contracts.ResponseJob)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ProcessJobResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProcessJobResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HeuristicLab.Hive.Contracts.ResponseResultReceived Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HeuristicLab.Hive.Contracts.ResponseResultReceived)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class LogoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LogoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HeuristicLab.Hive.Contracts.Response Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HeuristicLab.Hive.Contracts.Response)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ClientCommunicatorClient : System.ServiceModel.ClientBase<HeuristicLab.Hive.Client.Communication.ServerService.IClientCommunicator>, HeuristicLab.Hive.Client.Communication.ServerService.IClientCommunicator {
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginProcessHeartBeatDelegate;
        
        private EndOperationDelegate onEndProcessHeartBeatDelegate;
        
        private System.Threading.SendOrPostCallback onProcessHeartBeatCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendJobDelegate;
        
        private EndOperationDelegate onEndSendJobDelegate;
        
        private System.Threading.SendOrPostCallback onSendJobCompletedDelegate;
        
        private BeginOperationDelegate onBeginProcessJobResultDelegate;
        
        private EndOperationDelegate onEndProcessJobResultDelegate;
        
        private System.Threading.SendOrPostCallback onProcessJobResultCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogoutDelegate;
        
        private EndOperationDelegate onEndLogoutDelegate;
        
        private System.Threading.SendOrPostCallback onLogoutCompletedDelegate;
        
        public ClientCommunicatorClient() {
        }
        
        public ClientCommunicatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientCommunicatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientCommunicatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientCommunicatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<ProcessHeartBeatCompletedEventArgs> ProcessHeartBeatCompleted;
        
        public event System.EventHandler<SendJobCompletedEventArgs> SendJobCompleted;
        
        public event System.EventHandler<ProcessJobResultCompletedEventArgs> ProcessJobResultCompleted;
        
        public event System.EventHandler<LogoutCompletedEventArgs> LogoutCompleted;
        
        public HeuristicLab.Hive.Contracts.Response Login(HeuristicLab.Hive.Contracts.BusinessObjects.ClientInfo clientInfo) {
            return base.Channel.Login(clientInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogin(HeuristicLab.Hive.Contracts.BusinessObjects.ClientInfo clientInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(clientInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HeuristicLab.Hive.Contracts.Response EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HeuristicLab.Hive.Contracts.BusinessObjects.ClientInfo clientInfo = ((HeuristicLab.Hive.Contracts.BusinessObjects.ClientInfo)(inValues[0]));
            return this.BeginLogin(clientInfo, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            HeuristicLab.Hive.Contracts.Response retVal = this.EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(HeuristicLab.Hive.Contracts.BusinessObjects.ClientInfo clientInfo) {
            this.LoginAsync(clientInfo, null);
        }
        
        public void LoginAsync(HeuristicLab.Hive.Contracts.BusinessObjects.ClientInfo clientInfo, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        clientInfo}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        public HeuristicLab.Hive.Contracts.ResponseHB ProcessHeartBeat(HeuristicLab.Hive.Contracts.BusinessObjects.HeartBeatData hbData) {
            return base.Channel.ProcessHeartBeat(hbData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginProcessHeartBeat(HeuristicLab.Hive.Contracts.BusinessObjects.HeartBeatData hbData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProcessHeartBeat(hbData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HeuristicLab.Hive.Contracts.ResponseHB EndProcessHeartBeat(System.IAsyncResult result) {
            return base.Channel.EndProcessHeartBeat(result);
        }
        
        private System.IAsyncResult OnBeginProcessHeartBeat(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HeuristicLab.Hive.Contracts.BusinessObjects.HeartBeatData hbData = ((HeuristicLab.Hive.Contracts.BusinessObjects.HeartBeatData)(inValues[0]));
            return this.BeginProcessHeartBeat(hbData, callback, asyncState);
        }
        
        private object[] OnEndProcessHeartBeat(System.IAsyncResult result) {
            HeuristicLab.Hive.Contracts.ResponseHB retVal = this.EndProcessHeartBeat(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProcessHeartBeatCompleted(object state) {
            if ((this.ProcessHeartBeatCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProcessHeartBeatCompleted(this, new ProcessHeartBeatCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProcessHeartBeatAsync(HeuristicLab.Hive.Contracts.BusinessObjects.HeartBeatData hbData) {
            this.ProcessHeartBeatAsync(hbData, null);
        }
        
        public void ProcessHeartBeatAsync(HeuristicLab.Hive.Contracts.BusinessObjects.HeartBeatData hbData, object userState) {
            if ((this.onBeginProcessHeartBeatDelegate == null)) {
                this.onBeginProcessHeartBeatDelegate = new BeginOperationDelegate(this.OnBeginProcessHeartBeat);
            }
            if ((this.onEndProcessHeartBeatDelegate == null)) {
                this.onEndProcessHeartBeatDelegate = new EndOperationDelegate(this.OnEndProcessHeartBeat);
            }
            if ((this.onProcessHeartBeatCompletedDelegate == null)) {
                this.onProcessHeartBeatCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProcessHeartBeatCompleted);
            }
            base.InvokeAsync(this.onBeginProcessHeartBeatDelegate, new object[] {
                        hbData}, this.onEndProcessHeartBeatDelegate, this.onProcessHeartBeatCompletedDelegate, userState);
        }
        
        public HeuristicLab.Hive.Contracts.ResponseJob SendJob(System.Guid clientId) {
            return base.Channel.SendJob(clientId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendJob(System.Guid clientId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendJob(clientId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HeuristicLab.Hive.Contracts.ResponseJob EndSendJob(System.IAsyncResult result) {
            return base.Channel.EndSendJob(result);
        }
        
        private System.IAsyncResult OnBeginSendJob(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid clientId = ((System.Guid)(inValues[0]));
            return this.BeginSendJob(clientId, callback, asyncState);
        }
        
        private object[] OnEndSendJob(System.IAsyncResult result) {
            HeuristicLab.Hive.Contracts.ResponseJob retVal = this.EndSendJob(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendJobCompleted(object state) {
            if ((this.SendJobCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendJobCompleted(this, new SendJobCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendJobAsync(System.Guid clientId) {
            this.SendJobAsync(clientId, null);
        }
        
        public void SendJobAsync(System.Guid clientId, object userState) {
            if ((this.onBeginSendJobDelegate == null)) {
                this.onBeginSendJobDelegate = new BeginOperationDelegate(this.OnBeginSendJob);
            }
            if ((this.onEndSendJobDelegate == null)) {
                this.onEndSendJobDelegate = new EndOperationDelegate(this.OnEndSendJob);
            }
            if ((this.onSendJobCompletedDelegate == null)) {
                this.onSendJobCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendJobCompleted);
            }
            base.InvokeAsync(this.onBeginSendJobDelegate, new object[] {
                        clientId}, this.onEndSendJobDelegate, this.onSendJobCompletedDelegate, userState);
        }
        
        public HeuristicLab.Hive.Contracts.ResponseResultReceived ProcessJobResult(System.Guid clientId, long jobId, byte[] result, double percentage, System.Exception exception, bool finished) {
            return base.Channel.ProcessJobResult(clientId, jobId, result, percentage, exception, finished);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginProcessJobResult(System.Guid clientId, long jobId, byte[] result, double percentage, System.Exception exception, bool finished, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProcessJobResult(clientId, jobId, result, percentage, exception, finished, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HeuristicLab.Hive.Contracts.ResponseResultReceived EndProcessJobResult(System.IAsyncResult result) {
            return base.Channel.EndProcessJobResult(result);
        }
        
        private System.IAsyncResult OnBeginProcessJobResult(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid clientId = ((System.Guid)(inValues[0]));
            long jobId = ((long)(inValues[1]));
            byte[] result = ((byte[])(inValues[2]));
            double percentage = ((double)(inValues[3]));
            System.Exception exception = ((System.Exception)(inValues[4]));
            bool finished = ((bool)(inValues[5]));
            return this.BeginProcessJobResult(clientId, jobId, result, percentage, exception, finished, callback, asyncState);
        }
        
        private object[] OnEndProcessJobResult(System.IAsyncResult result) {
            HeuristicLab.Hive.Contracts.ResponseResultReceived retVal = this.EndProcessJobResult(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProcessJobResultCompleted(object state) {
            if ((this.ProcessJobResultCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProcessJobResultCompleted(this, new ProcessJobResultCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProcessJobResultAsync(System.Guid clientId, long jobId, byte[] result, double percentage, System.Exception exception, bool finished) {
            this.ProcessJobResultAsync(clientId, jobId, result, percentage, exception, finished, null);
        }
        
        public void ProcessJobResultAsync(System.Guid clientId, long jobId, byte[] result, double percentage, System.Exception exception, bool finished, object userState) {
            if ((this.onBeginProcessJobResultDelegate == null)) {
                this.onBeginProcessJobResultDelegate = new BeginOperationDelegate(this.OnBeginProcessJobResult);
            }
            if ((this.onEndProcessJobResultDelegate == null)) {
                this.onEndProcessJobResultDelegate = new EndOperationDelegate(this.OnEndProcessJobResult);
            }
            if ((this.onProcessJobResultCompletedDelegate == null)) {
                this.onProcessJobResultCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProcessJobResultCompleted);
            }
            base.InvokeAsync(this.onBeginProcessJobResultDelegate, new object[] {
                        clientId,
                        jobId,
                        result,
                        percentage,
                        exception,
                        finished}, this.onEndProcessJobResultDelegate, this.onProcessJobResultCompletedDelegate, userState);
        }
        
        public HeuristicLab.Hive.Contracts.Response Logout(System.Guid clientId) {
            return base.Channel.Logout(clientId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogout(System.Guid clientId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogout(clientId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HeuristicLab.Hive.Contracts.Response EndLogout(System.IAsyncResult result) {
            return base.Channel.EndLogout(result);
        }
        
        private System.IAsyncResult OnBeginLogout(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid clientId = ((System.Guid)(inValues[0]));
            return this.BeginLogout(clientId, callback, asyncState);
        }
        
        private object[] OnEndLogout(System.IAsyncResult result) {
            HeuristicLab.Hive.Contracts.Response retVal = this.EndLogout(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLogoutCompleted(object state) {
            if ((this.LogoutCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogoutCompleted(this, new LogoutCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogoutAsync(System.Guid clientId) {
            this.LogoutAsync(clientId, null);
        }
        
        public void LogoutAsync(System.Guid clientId, object userState) {
            if ((this.onBeginLogoutDelegate == null)) {
                this.onBeginLogoutDelegate = new BeginOperationDelegate(this.OnBeginLogout);
            }
            if ((this.onEndLogoutDelegate == null)) {
                this.onEndLogoutDelegate = new EndOperationDelegate(this.OnEndLogout);
            }
            if ((this.onLogoutCompletedDelegate == null)) {
                this.onLogoutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogoutCompleted);
            }
            base.InvokeAsync(this.onBeginLogoutDelegate, new object[] {
                        clientId}, this.onEndLogoutDelegate, this.onLogoutCompletedDelegate, userState);
        }
    }
}
