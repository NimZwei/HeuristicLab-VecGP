//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HeuristicLab.Hive.Client.Console.ClientService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusCommons", Namespace="http://schemas.datacontract.org/2004/07/HeuristicLab.Hive.Client.Core.ClientConso" +
        "leService")]
    [System.SerializableAttribute()]
    public partial class StatusCommons : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ClientGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ConnectedSinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeuristicLab.Hive.Client.Console.ClientService.JobStatus[] JobsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobsAbortedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobsDoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobsFetchedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeuristicLab.Hive.Client.Console.ClientService.NetworkEnumWcfConnState StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ClientGuid {
            get {
                return this.ClientGuidField;
            }
            set {
                if ((this.ClientGuidField.Equals(value) != true)) {
                    this.ClientGuidField = value;
                    this.RaisePropertyChanged("ClientGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ConnectedSince {
            get {
                return this.ConnectedSinceField;
            }
            set {
                if ((this.ConnectedSinceField.Equals(value) != true)) {
                    this.ConnectedSinceField = value;
                    this.RaisePropertyChanged("ConnectedSince");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeuristicLab.Hive.Client.Console.ClientService.JobStatus[] Jobs {
            get {
                return this.JobsField;
            }
            set {
                if ((object.ReferenceEquals(this.JobsField, value) != true)) {
                    this.JobsField = value;
                    this.RaisePropertyChanged("Jobs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobsAborted {
            get {
                return this.JobsAbortedField;
            }
            set {
                if ((this.JobsAbortedField.Equals(value) != true)) {
                    this.JobsAbortedField = value;
                    this.RaisePropertyChanged("JobsAborted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobsDone {
            get {
                return this.JobsDoneField;
            }
            set {
                if ((this.JobsDoneField.Equals(value) != true)) {
                    this.JobsDoneField = value;
                    this.RaisePropertyChanged("JobsDone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobsFetched {
            get {
                return this.JobsFetchedField;
            }
            set {
                if ((this.JobsFetchedField.Equals(value) != true)) {
                    this.JobsFetchedField = value;
                    this.RaisePropertyChanged("JobsFetched");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeuristicLab.Hive.Client.Console.ClientService.NetworkEnumWcfConnState Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobStatus", Namespace="http://schemas.datacontract.org/2004/07/HeuristicLab.Hive.Client.Core.ClientConso" +
        "leService")]
    [System.SerializableAttribute()]
    public partial class JobStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ProgressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SinceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Progress {
            get {
                return this.ProgressField;
            }
            set {
                if ((this.ProgressField.Equals(value) != true)) {
                    this.ProgressField = value;
                    this.RaisePropertyChanged("Progress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Since {
            get {
                return this.SinceField;
            }
            set {
                if ((this.SinceField.Equals(value) != true)) {
                    this.SinceField = value;
                    this.RaisePropertyChanged("Since");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NetworkEnum.WcfConnState", Namespace="http://schemas.datacontract.org/2004/07/HeuristicLab.Hive.Client.Common")]
    public enum NetworkEnumWcfConnState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Connected = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disconnected = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectionContainer", Namespace="http://schemas.datacontract.org/2004/07/HeuristicLab.Hive.Client.Core.ClientConso" +
        "leService")]
    [System.SerializableAttribute()]
    public partial class ConnectionContainer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAdressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAdress {
            get {
                return this.IPAdressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAdressField, value) != true)) {
                    this.IPAdressField = value;
                    this.RaisePropertyChanged("IPAdress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClientService.IClientConsoleCommunicator")]
    public interface IClientConsoleCommunicator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientConsoleCommunicator/GetStatusInfos", ReplyAction="http://tempuri.org/IClientConsoleCommunicator/GetStatusInfosResponse")]
        HeuristicLab.Hive.Client.Console.ClientService.StatusCommons GetStatusInfos();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClientConsoleCommunicator/GetStatusInfos", ReplyAction="http://tempuri.org/IClientConsoleCommunicator/GetStatusInfosResponse")]
        System.IAsyncResult BeginGetStatusInfos(System.AsyncCallback callback, object asyncState);
        
        HeuristicLab.Hive.Client.Console.ClientService.StatusCommons EndGetStatusInfos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientConsoleCommunicator/GetConnection", ReplyAction="http://tempuri.org/IClientConsoleCommunicator/GetConnectionResponse")]
        HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer GetConnection();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClientConsoleCommunicator/GetConnection", ReplyAction="http://tempuri.org/IClientConsoleCommunicator/GetConnectionResponse")]
        System.IAsyncResult BeginGetConnection(System.AsyncCallback callback, object asyncState);
        
        HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer EndGetConnection(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientConsoleCommunicator/SetConnection", ReplyAction="http://tempuri.org/IClientConsoleCommunicator/SetConnectionResponse")]
        void SetConnection(HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer container);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClientConsoleCommunicator/SetConnection", ReplyAction="http://tempuri.org/IClientConsoleCommunicator/SetConnectionResponse")]
        System.IAsyncResult BeginSetConnection(HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer container, System.AsyncCallback callback, object asyncState);
        
        void EndSetConnection(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientConsoleCommunicator/Disconnect", ReplyAction="http://tempuri.org/IClientConsoleCommunicator/DisconnectResponse")]
        void Disconnect();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClientConsoleCommunicator/Disconnect", ReplyAction="http://tempuri.org/IClientConsoleCommunicator/DisconnectResponse")]
        System.IAsyncResult BeginDisconnect(System.AsyncCallback callback, object asyncState);
        
        void EndDisconnect(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientConsoleCommunicator/GetCurrentConnection", ReplyAction="http://tempuri.org/IClientConsoleCommunicator/GetCurrentConnectionResponse")]
        HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer GetCurrentConnection();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClientConsoleCommunicator/GetCurrentConnection", ReplyAction="http://tempuri.org/IClientConsoleCommunicator/GetCurrentConnectionResponse")]
        System.IAsyncResult BeginGetCurrentConnection(System.AsyncCallback callback, object asyncState);
        
        HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer EndGetCurrentConnection(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IClientConsoleCommunicatorChannel : HeuristicLab.Hive.Client.Console.ClientService.IClientConsoleCommunicator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetStatusInfosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStatusInfosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HeuristicLab.Hive.Client.Console.ClientService.StatusCommons Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HeuristicLab.Hive.Client.Console.ClientService.StatusCommons)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetCurrentConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCurrentConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ClientConsoleCommunicatorClient : System.ServiceModel.ClientBase<HeuristicLab.Hive.Client.Console.ClientService.IClientConsoleCommunicator>, HeuristicLab.Hive.Client.Console.ClientService.IClientConsoleCommunicator {
        
        private BeginOperationDelegate onBeginGetStatusInfosDelegate;
        
        private EndOperationDelegate onEndGetStatusInfosDelegate;
        
        private System.Threading.SendOrPostCallback onGetStatusInfosCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetConnectionDelegate;
        
        private EndOperationDelegate onEndGetConnectionDelegate;
        
        private System.Threading.SendOrPostCallback onGetConnectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetConnectionDelegate;
        
        private EndOperationDelegate onEndSetConnectionDelegate;
        
        private System.Threading.SendOrPostCallback onSetConnectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginDisconnectDelegate;
        
        private EndOperationDelegate onEndDisconnectDelegate;
        
        private System.Threading.SendOrPostCallback onDisconnectCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCurrentConnectionDelegate;
        
        private EndOperationDelegate onEndGetCurrentConnectionDelegate;
        
        private System.Threading.SendOrPostCallback onGetCurrentConnectionCompletedDelegate;
        
        public ClientConsoleCommunicatorClient() {
        }
        
        public ClientConsoleCommunicatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientConsoleCommunicatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientConsoleCommunicatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientConsoleCommunicatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetStatusInfosCompletedEventArgs> GetStatusInfosCompleted;
        
        public event System.EventHandler<GetConnectionCompletedEventArgs> GetConnectionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetConnectionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DisconnectCompleted;
        
        public event System.EventHandler<GetCurrentConnectionCompletedEventArgs> GetCurrentConnectionCompleted;
        
        public HeuristicLab.Hive.Client.Console.ClientService.StatusCommons GetStatusInfos() {
            return base.Channel.GetStatusInfos();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetStatusInfos(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStatusInfos(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HeuristicLab.Hive.Client.Console.ClientService.StatusCommons EndGetStatusInfos(System.IAsyncResult result) {
            return base.Channel.EndGetStatusInfos(result);
        }
        
        private System.IAsyncResult OnBeginGetStatusInfos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetStatusInfos(callback, asyncState);
        }
        
        private object[] OnEndGetStatusInfos(System.IAsyncResult result) {
            HeuristicLab.Hive.Client.Console.ClientService.StatusCommons retVal = this.EndGetStatusInfos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStatusInfosCompleted(object state) {
            if ((this.GetStatusInfosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStatusInfosCompleted(this, new GetStatusInfosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStatusInfosAsync() {
            this.GetStatusInfosAsync(null);
        }
        
        public void GetStatusInfosAsync(object userState) {
            if ((this.onBeginGetStatusInfosDelegate == null)) {
                this.onBeginGetStatusInfosDelegate = new BeginOperationDelegate(this.OnBeginGetStatusInfos);
            }
            if ((this.onEndGetStatusInfosDelegate == null)) {
                this.onEndGetStatusInfosDelegate = new EndOperationDelegate(this.OnEndGetStatusInfos);
            }
            if ((this.onGetStatusInfosCompletedDelegate == null)) {
                this.onGetStatusInfosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStatusInfosCompleted);
            }
            base.InvokeAsync(this.onBeginGetStatusInfosDelegate, null, this.onEndGetStatusInfosDelegate, this.onGetStatusInfosCompletedDelegate, userState);
        }
        
        public HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer GetConnection() {
            return base.Channel.GetConnection();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetConnection(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConnection(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer EndGetConnection(System.IAsyncResult result) {
            return base.Channel.EndGetConnection(result);
        }
        
        private System.IAsyncResult OnBeginGetConnection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetConnection(callback, asyncState);
        }
        
        private object[] OnEndGetConnection(System.IAsyncResult result) {
            HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer retVal = this.EndGetConnection(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConnectionCompleted(object state) {
            if ((this.GetConnectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConnectionCompleted(this, new GetConnectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConnectionAsync() {
            this.GetConnectionAsync(null);
        }
        
        public void GetConnectionAsync(object userState) {
            if ((this.onBeginGetConnectionDelegate == null)) {
                this.onBeginGetConnectionDelegate = new BeginOperationDelegate(this.OnBeginGetConnection);
            }
            if ((this.onEndGetConnectionDelegate == null)) {
                this.onEndGetConnectionDelegate = new EndOperationDelegate(this.OnEndGetConnection);
            }
            if ((this.onGetConnectionCompletedDelegate == null)) {
                this.onGetConnectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConnectionCompleted);
            }
            base.InvokeAsync(this.onBeginGetConnectionDelegate, null, this.onEndGetConnectionDelegate, this.onGetConnectionCompletedDelegate, userState);
        }
        
        public void SetConnection(HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer container) {
            base.Channel.SetConnection(container);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetConnection(HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer container, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetConnection(container, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetConnection(System.IAsyncResult result) {
            base.Channel.EndSetConnection(result);
        }
        
        private System.IAsyncResult OnBeginSetConnection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer container = ((HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer)(inValues[0]));
            return this.BeginSetConnection(container, callback, asyncState);
        }
        
        private object[] OnEndSetConnection(System.IAsyncResult result) {
            this.EndSetConnection(result);
            return null;
        }
        
        private void OnSetConnectionCompleted(object state) {
            if ((this.SetConnectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetConnectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetConnectionAsync(HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer container) {
            this.SetConnectionAsync(container, null);
        }
        
        public void SetConnectionAsync(HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer container, object userState) {
            if ((this.onBeginSetConnectionDelegate == null)) {
                this.onBeginSetConnectionDelegate = new BeginOperationDelegate(this.OnBeginSetConnection);
            }
            if ((this.onEndSetConnectionDelegate == null)) {
                this.onEndSetConnectionDelegate = new EndOperationDelegate(this.OnEndSetConnection);
            }
            if ((this.onSetConnectionCompletedDelegate == null)) {
                this.onSetConnectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetConnectionCompleted);
            }
            base.InvokeAsync(this.onBeginSetConnectionDelegate, new object[] {
                        container}, this.onEndSetConnectionDelegate, this.onSetConnectionCompletedDelegate, userState);
        }
        
        public void Disconnect() {
            base.Channel.Disconnect();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDisconnect(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDisconnect(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDisconnect(System.IAsyncResult result) {
            base.Channel.EndDisconnect(result);
        }
        
        private System.IAsyncResult OnBeginDisconnect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginDisconnect(callback, asyncState);
        }
        
        private object[] OnEndDisconnect(System.IAsyncResult result) {
            this.EndDisconnect(result);
            return null;
        }
        
        private void OnDisconnectCompleted(object state) {
            if ((this.DisconnectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DisconnectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DisconnectAsync() {
            this.DisconnectAsync(null);
        }
        
        public void DisconnectAsync(object userState) {
            if ((this.onBeginDisconnectDelegate == null)) {
                this.onBeginDisconnectDelegate = new BeginOperationDelegate(this.OnBeginDisconnect);
            }
            if ((this.onEndDisconnectDelegate == null)) {
                this.onEndDisconnectDelegate = new EndOperationDelegate(this.OnEndDisconnect);
            }
            if ((this.onDisconnectCompletedDelegate == null)) {
                this.onDisconnectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDisconnectCompleted);
            }
            base.InvokeAsync(this.onBeginDisconnectDelegate, null, this.onEndDisconnectDelegate, this.onDisconnectCompletedDelegate, userState);
        }
        
        public HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer GetCurrentConnection() {
            return base.Channel.GetCurrentConnection();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCurrentConnection(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCurrentConnection(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer EndGetCurrentConnection(System.IAsyncResult result) {
            return base.Channel.EndGetCurrentConnection(result);
        }
        
        private System.IAsyncResult OnBeginGetCurrentConnection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCurrentConnection(callback, asyncState);
        }
        
        private object[] OnEndGetCurrentConnection(System.IAsyncResult result) {
            HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer retVal = this.EndGetCurrentConnection(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCurrentConnectionCompleted(object state) {
            if ((this.GetCurrentConnectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrentConnectionCompleted(this, new GetCurrentConnectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCurrentConnectionAsync() {
            this.GetCurrentConnectionAsync(null);
        }
        
        public void GetCurrentConnectionAsync(object userState) {
            if ((this.onBeginGetCurrentConnectionDelegate == null)) {
                this.onBeginGetCurrentConnectionDelegate = new BeginOperationDelegate(this.OnBeginGetCurrentConnection);
            }
            if ((this.onEndGetCurrentConnectionDelegate == null)) {
                this.onEndGetCurrentConnectionDelegate = new EndOperationDelegate(this.OnEndGetCurrentConnection);
            }
            if ((this.onGetCurrentConnectionCompletedDelegate == null)) {
                this.onGetCurrentConnectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrentConnectionCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrentConnectionDelegate, null, this.onEndGetCurrentConnectionDelegate, this.onGetCurrentConnectionCompletedDelegate, userState);
        }
    }
}
