//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HeuristicLab.Hive.Client.Console.ClientService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusCommons", Namespace="http://schemas.datacontract.org/2004/07/HeuristicLab.Hive.Client.Core.ClientConso" +
        "leService")]
    [System.SerializableAttribute()]
    public partial class StatusCommons : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ClientGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ConnectedSinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeuristicLab.Hive.Client.Console.ClientService.JobStatus[] JobsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobsAbortedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobsDoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobsFetchedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeuristicLab.Hive.Client.Console.ClientService.NetworkEnumWcfConnState StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ClientGuid {
            get {
                return this.ClientGuidField;
            }
            set {
                if ((this.ClientGuidField.Equals(value) != true)) {
                    this.ClientGuidField = value;
                    this.RaisePropertyChanged("ClientGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ConnectedSince {
            get {
                return this.ConnectedSinceField;
            }
            set {
                if ((this.ConnectedSinceField.Equals(value) != true)) {
                    this.ConnectedSinceField = value;
                    this.RaisePropertyChanged("ConnectedSince");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeuristicLab.Hive.Client.Console.ClientService.JobStatus[] Jobs {
            get {
                return this.JobsField;
            }
            set {
                if ((object.ReferenceEquals(this.JobsField, value) != true)) {
                    this.JobsField = value;
                    this.RaisePropertyChanged("Jobs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobsAborted {
            get {
                return this.JobsAbortedField;
            }
            set {
                if ((this.JobsAbortedField.Equals(value) != true)) {
                    this.JobsAbortedField = value;
                    this.RaisePropertyChanged("JobsAborted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobsDone {
            get {
                return this.JobsDoneField;
            }
            set {
                if ((this.JobsDoneField.Equals(value) != true)) {
                    this.JobsDoneField = value;
                    this.RaisePropertyChanged("JobsDone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobsFetched {
            get {
                return this.JobsFetchedField;
            }
            set {
                if ((this.JobsFetchedField.Equals(value) != true)) {
                    this.JobsFetchedField = value;
                    this.RaisePropertyChanged("JobsFetched");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeuristicLab.Hive.Client.Console.ClientService.NetworkEnumWcfConnState Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobStatus", Namespace="http://schemas.datacontract.org/2004/07/HeuristicLab.Hive.Client.Core.ClientConso" +
        "leService")]
    [System.SerializableAttribute()]
    public partial class JobStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ProgressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SinceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Progress {
            get {
                return this.ProgressField;
            }
            set {
                if ((this.ProgressField.Equals(value) != true)) {
                    this.ProgressField = value;
                    this.RaisePropertyChanged("Progress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Since {
            get {
                return this.SinceField;
            }
            set {
                if ((this.SinceField.Equals(value) != true)) {
                    this.SinceField = value;
                    this.RaisePropertyChanged("Since");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NetworkEnum.WcfConnState", Namespace="http://schemas.datacontract.org/2004/07/HeuristicLab.Hive.Client.Common")]
    public enum NetworkEnumWcfConnState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Connected = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disconnected = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectionContainer", Namespace="http://schemas.datacontract.org/2004/07/HeuristicLab.Hive.Client.Core.ClientConso" +
        "leService")]
    [System.SerializableAttribute()]
    public partial class ConnectionContainer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAdressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAdress {
            get {
                return this.IPAdressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAdressField, value) != true)) {
                    this.IPAdressField = value;
                    this.RaisePropertyChanged("IPAdress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClientService.IClientConsoleCommunicator")]
    public interface IClientConsoleCommunicator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientConsoleCommunicator/GetStatusInfos", ReplyAction="http://tempuri.org/IClientConsoleCommunicator/GetStatusInfosResponse")]
        HeuristicLab.Hive.Client.Console.ClientService.StatusCommons GetStatusInfos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientConsoleCommunicator/GetConnection", ReplyAction="http://tempuri.org/IClientConsoleCommunicator/GetConnectionResponse")]
        HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer GetConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientConsoleCommunicator/SetConnection", ReplyAction="http://tempuri.org/IClientConsoleCommunicator/SetConnectionResponse")]
        void SetConnection(HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer container);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientConsoleCommunicator/Disconnect", ReplyAction="http://tempuri.org/IClientConsoleCommunicator/DisconnectResponse")]
        void Disconnect();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientConsoleCommunicator/GetCurrentConnection", ReplyAction="http://tempuri.org/IClientConsoleCommunicator/GetCurrentConnectionResponse")]
        HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer GetCurrentConnection();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IClientConsoleCommunicatorChannel : HeuristicLab.Hive.Client.Console.ClientService.IClientConsoleCommunicator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ClientConsoleCommunicatorClient : System.ServiceModel.ClientBase<HeuristicLab.Hive.Client.Console.ClientService.IClientConsoleCommunicator>, HeuristicLab.Hive.Client.Console.ClientService.IClientConsoleCommunicator {
        
        public ClientConsoleCommunicatorClient() {
        }
        
        public ClientConsoleCommunicatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientConsoleCommunicatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientConsoleCommunicatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientConsoleCommunicatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HeuristicLab.Hive.Client.Console.ClientService.StatusCommons GetStatusInfos() {
            return base.Channel.GetStatusInfos();
        }
        
        public HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer GetConnection() {
            return base.Channel.GetConnection();
        }
        
        public void SetConnection(HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer container) {
            base.Channel.SetConnection(container);
        }
        
        public void Disconnect() {
            base.Channel.Disconnect();
        }
        
        public HeuristicLab.Hive.Client.Console.ClientService.ConnectionContainer GetCurrentConnection() {
            return base.Channel.GetCurrentConnection();
        }
    }
}
