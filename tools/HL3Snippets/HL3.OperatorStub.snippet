<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>HL3.OperatorStub</Title>
      <Author>Andreas Beham</Author>
      <Description>Creates an operator class</Description>
      <HelpUrl>https://dev.heuristiclab.com/trac/hl/core/wiki/DevelopersCodeSnippets</HelpUrl>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Keywords />
      <Shortcut>hl3OperatorClass</Shortcut>
    </Header>
    <Snippet>
      <References />
      <Imports />
      <Declarations>
        <Literal Editable="true">
          <ID>OperatorName</ID>
          <Type></Type>
          <ToolTip></ToolTip>
          <Default>MyOperator</Default>
          <Function></Function>
        </Literal>
        <Literal Editable="true">
          <ID>BaseClass</ID>
          <Type></Type>
          <ToolTip>Most operators derive from SingleSuccessorOperator</ToolTip>
          <Default>SingleSuccessorOperator</Default>
          <Function></Function>
        </Literal>
        <Literal Editable="true">
          <ID>OperatorDescription</ID>
          <Type></Type>
          <ToolTip>It is always advised to add a good description of your operator</ToolTip>
          <Default>Description missing</Default>
          <Function></Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Kind="" Delimiter="$"><![CDATA[[Item("$OperatorName$", "$OperatorDescription$")]
[StorableClass]
public class $OperatorName$ : $BaseClass$ {

	#region Parameter Properties
	#endregion

	[StorableConstructor]
	protected $OperatorName$(bool deserializing) : base(deserializing) { }
	public $OperatorName$()
		: base() {
		// TODO: Add new parameters here
	}

    public override IOperation Apply() {
      // TODO: Add your code here
      return base.Apply(scope);
    }
}]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>